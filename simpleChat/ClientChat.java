/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package simpleChat;

import java.io.DataInputStream;
import java.io.PrintWriter;
import java.net.Socket;

/**
 *
 * @author Jorge Luis
 */
public class ClientChat extends javax.swing.JFrame implements Runnable{

    /**
     * Creates new form ClientChat
     */
    public ClientChat() {
        initComponents();
        connectToServer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        message = new javax.swing.JTextField();
        Submit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        chat = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        message.setName("message"); // NOI18N
        message.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageActionPerformed(evt);
            }
        });

        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        chat.setEditable(false);
        chat.setColumns(20);
        chat.setRows(5);
        chat.setName("chat"); // NOI18N
        jScrollPane1.setViewportView(chat);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Submit))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // TODO add your handling code here:
        try
        {
            toServer.println(message.getText());
            message.setText("");
        }catch(Exception e )
        {
            System.out.println(e.getMessage());        
        }
    }//GEN-LAST:event_SubmitActionPerformed

    private void messageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientChat().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Submit;
    private javax.swing.JTextArea chat;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField message;
    // End of variables declaration//GEN-END:variables

	// Input and output streams from / to server
	private DataInputStream fromServer;
	private PrintWriter toServer;

	// Host name or ip
	private String host = "localhost";

	// Initialize User Interface

	
		// Connect to the server
	

	private void connectToServer() {

		try {
			// Create a socket to connect to the server
			Socket socket;

//			if (isStandAlone)
			socket = new Socket(host, 3000);
//			else
//				socket = new Socket(getCodeBase().getHost(), 3000);

			// Create an input stream to receive data from the server
			fromServer = new DataInputStream(socket.getInputStream());

			// Create an output stream to send data to the server
			toServer = new PrintWriter(socket.getOutputStream(), true);
		}
		catch (Exception ex) {
			System.err.println(ex);
		}

		// Control the game on a separate thread
		Thread thread = new Thread(this);
		thread.start();
	}

	public void run() {

               while(true)
               {
		try {
                    
                        // Get notification from the server
                       
                       String messageString = fromServer.readLine();	
//              
                       System.out.println(messageString);
                       chat.append(messageString+"\n");
			// Am I player 1 or player 2?
//			if (!message.isEmpty()) {
//				// Receive startup notification from the server
//				chat.setText(message); // Whatever read is ignored
		}catch(Exception e){System.out.println(e.getMessage());}
                        
            }
//			// Continue to play
//			while(keepPlaying) {
//				if (player == PLAYER1) {
//					waitForPlayerAction(); // Wait for player 1 to move
//					sendMove(); // Send the move to the server
//					receiveInfoFromServer(); // Receive info from server
//				}
//				else if (player == PLAYER2) {
//					receiveInfoFromServer(); // Receive info from server
//					waitForPlayerAction(); // Wait for player 2 to move
//					sendMove(); // Send player 2's move to the server
//				}
//	
	}    
}
